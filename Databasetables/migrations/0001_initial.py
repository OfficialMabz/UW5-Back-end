# Generated by Django 2.2.10 on 2021-07-30 21:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CupRounds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.IntegerField(blank=True)),
                ('endDate', models.IntegerField(blank=True)),
                ('cupRoundTitle', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ladder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LadderName', models.CharField(default='0', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('pitches', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentId', models.CharField(default='0', max_length=10)),
                ('phone', models.IntegerField(blank=True, default='0')),
                ('goalsScored', models.IntegerField(blank=True, null=True)),
                ('fb_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='StudentID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentid', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, max_length=5)),
                ('playerId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PlayerProfile')),
                ('positionId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Positions')),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=220)),
                ('password', models.CharField(max_length=50)),
                ('photo', models.FileField(blank=True, upload_to='teamsImage/')),
                ('competitionId', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True)),
                ('contactforfriendly', models.CharField(blank=True, max_length=50)),
                ('seeded', models.IntegerField(blank=True)),
                ('coefficient', models.IntegerField(blank=True)),
                ('coefficientRank', models.IntegerField(blank=True)),
                ('ladderId', models.ForeignKey(blank=True, default=0, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Ladder')),
            ],
        ),
        migrations.CreateModel(
            name='PreBooked',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(blank=True)),
                ('time', models.TimeField(blank=True)),
                ('temp', models.IntegerField(blank=True)),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
            ],
        ),
        migrations.CreateModel(
            name='PitchBookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.IntegerField(blank=True)),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
                ('prebookedId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PreBooked')),
                ('teamAId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
                ('teamBId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeamBPitchBookings', to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueGames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamAGoals', models.IntegerField(blank=True)),
                ('teamBGoals', models.IntegerField(blank=True)),
                ('resultId', models.IntegerField(blank=True)),
                ('date', models.IntegerField(blank=True)),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
                ('prebookedId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PreBooked')),
                ('teamAId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
                ('teamBId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeamBLeagueGames', to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueFinals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamAGoals', models.IntegerField(blank=True)),
                ('teamBGoals', models.IntegerField(blank=True)),
                ('resultId', models.IntegerField(blank=True)),
                ('date', models.IntegerField(blank=True)),
                ('roundId', models.IntegerField(blank=True)),
                ('typeId', models.IntegerField(blank=True)),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
                ('prebookedId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PreBooked')),
                ('teamAId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
                ('teamBId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeamBLeagueFinal', to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leagueId', models.IntegerField(blank=True, default='0')),
                ('teamId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='Fixtures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultId', models.IntegerField(blank=True)),
                ('confirmed', models.IntegerField(blank=True)),
                ('date', models.IntegerField(blank=True)),
                ('challengingTeamGoals', models.IntegerField(blank=True)),
                ('challengedTeamGoals', models.IntegerField(blank=True)),
                ('challengingGoalsEntered', models.IntegerField(blank=True)),
                ('challengedGoalsEntered', models.IntegerField(blank=True)),
                ('challengedTeamId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ChallengedTeam', to='Databasetables.Teams')),
                ('challengingTeamId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
                ('prebookedId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PreBooked')),
            ],
        ),
        migrations.CreateModel(
            name='CupDraws',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamAgoals', models.IntegerField(blank=True)),
                ('teamBgoals', models.IntegerField(blank=True)),
                ('resultId', models.IntegerField(blank=True)),
                ('date', models.CharField(blank=True, max_length=15)),
                ('confirmed', models.IntegerField(blank=True)),
                ('deadline', models.IntegerField(blank=True)),
                ('cupRoundId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.CupRounds')),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Locations')),
                ('prebookedId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PreBooked')),
                ('teamAId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
                ('teamBId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeamBCupDraws', to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queueJoinTime', models.IntegerField(blank=True)),
                ('allocatedTime', models.IntegerField(blank=True)),
                ('teamId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Teams')),
            ],
        ),
        migrations.CreateModel(
            name='Candidates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifesto', models.TextField(max_length=20)),
                ('playerId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.PlayerProfile')),
                ('positionId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Databasetables.Positions')),
            ],
        ),
    ]
